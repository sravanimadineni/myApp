pipeline {
    agent any

    environment {
        SERVICE_NAME = 'user-service'
        AWS_REGION = 'us-east-1'  // Change to your AWS region
        ECR_REPO = 'myapp-ecr-repo'
        IMAGE_NAME = 'myapp-user-service'
        CONTAINER_PORT = '8081'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/sravanimadineni/myApp.git'
            }
        }

        stage('Build') {
            steps {
                dir('user-service') {
                    bat 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Docker Build & Push to AWS ECR') {
            steps {
                script {
                    // Login to AWS ECR
                    bat """
                    aws ecr get-login-password --region %AWS_REGION% > ecr-login.txt
                    docker login --username AWS --password $(type ecr-login.txt) <AWS_ACCOUNT_ID>.dkr.ecr.%AWS_REGION%.amazonaws.com
                    """

                    // Build and tag image
                    bat """
                    docker build -t %IMAGE_NAME% user-service/.
                    docker tag %IMAGE_NAME%:latest <AWS_ACCOUNT_ID>.dkr.ecr.%AWS_REGION%.amazonaws.com/%ECR_REPO%:latest
                    """

                    // Push to ECR
                    bat "docker push <AWS_ACCOUNT_ID>.dkr.ecr.%AWS_REGION%.amazonaws.com/%ECR_REPO%:latest"
                }
            }
        }

        stage('Deploy to AWS EC2') {
            steps {
                script {
                    bat """
                    echo y | pscp -i jenkins-ssh-key.pem deploy_script.bat ec2-user@<EC2_INSTANCE_IP>:
                    psexec \\<EC2_INSTANCE_IP> -i jenkins-ssh-key.pem -u ec2-user cmd /c deploy_script.bat
                    """
                }
            }
        }
    }
}
